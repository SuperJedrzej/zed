fit_lm <- train(kwh ~ ., data = training, method = "lm", trControl = ctrl)
rdf<-df%>% select(idsito,lat,lon, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$kwh, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5,)
fit_lm <- train(kwh ~ ., data = training, method = "lm", trControl = ctrl)
rdf<-df%>% select(idsito,lat,lon, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$kwh, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fit_lm <- train(kwh ~ ., data = training, method = "lm", trControl = ctrl)
rdf<-df%>% select(idsito,lat,lon, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$kwh, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fit_lm <- train(kwh ~ ., data = training,metric="RMSE", method = "lm", trControl = ctrl)
rdf<-df%>% select(idsito,lat,lon, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$kwh, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fit_lm <- train(kwh ~ .,
data = training,
method = "lm",
metric="RMSE",
trControl = ctrl)
rdf<-df%>% select(idsito,lat,lon, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fit_lm <- train(kwh ~ .,
data = training,
method = "lm",
metric="RMSE",
trControl = ctrl)
knitr::opts_chunk$set(echo = TRUE)
inTraining <- createDataPartition(y = powerhouse$kwh, p = .8, list = FALSE)
df$idsito <- factor(df$idsito, labels=c(1:length(table(df$idsito))))
rdf<-df%>% select(idsito,lat,lon, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fit_lm <- train(kwh ~ .,
data = training,
method = "lm",
metric="RMSE",
trControl = ctrl)
df$idsito <- factor(df$idsito, labels=c(1:length(table(df$idsito))))
rdf<-df%>% select(idsito,lat,lon, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$kwh, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fit_lm <- train(kwh ~ .,
data = training,
method = "lm",
metric="RMSE",
trControl = ctrl)
#df$idsito <- factor(df$idsito, labels=c(1:length(table(df$idsito))))
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$kwh, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fit_lm <- train(kwh ~ .,
data = training,
method = "lm",
metric="RMSE",
trControl = ctrl)
#df$idsito <- factor(df$idsito, labels=c(1:length(table(df$idsito))))
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$kwh, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 6)
fit_lm <- train(kwh ~ .,
data = training,
method = "lm",
metric="RMSE",
trControl = ctrl)
library(ggplot2)
library(dplyr)
library(corrplot)
library(reshape2)
library(lubridate)
library(gapminder)
library(gridExtra)
library(plotly)
library(caret)
View(a)
library(ggplot2)
library(dplyr)
library(corrplot)
library(reshape2)
library(lubridate)
library(gapminder)
library(gridExtra)
library(plotly)
library(caret)
df <- read.csv("elektrownie.csv", row.names=1)
df$data <- as.POSIXct(strptime(df$data, "%m/%d/%Y %k:%M"))
df <- df %>% mutate(df_month = month(data))
df <- df %>% group_by(anno, df_month, ora) %>% mutate(kwh = ifelse(kwh == 0, mean(kwh), kwh))
df <- df %>% group_by(anno, df_month, ora ) %>% mutate(irradiamento = ifelse(irradiamento == 0 & kwh > 0, mean(irradiamento), irradiamento))
set.seed(23)
summary(select(df,data,lat,lon,irradiamento,altitude,humidity,tempi,irri,kwh,dist,azimuthi,windspeed,pressure ))
przyklady<-select(df,lat,lon,irradiamento,altitude,humidity,tempi,dist,azimuthi,kwh,windspeed,pressure)
a <- list()
for (col in colnames(przyklady)) {
a[[col]] <-((ggplot(przyklady) +
aes_string(x=col) +
geom_histogram(bins = 30)))
}
do.call("grid.arrange",c(a, ncol = 3))
cor <- cor(df %>% select(-data),use="complete.obs")
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor,type="upper",order="hclust", tl.col = "black", method = "color",col=col(200), addgrid.col = "black", diag=FALSE, tl.srt = 45)
wykres <- df %>% group_by(idsito,anno,df_month) %>% summarise(kwh = sum(kwh))
ggplotwykres <- ggplot(data = wykres, aes(df_month,kwh, color=factor(idsito))) +
geom_point()+
labs(y="kWh") +
labs(x="miesiąc")+
labs("Interaktywny wykres")
ggplotly(ggplotwykres,dynamicTicks = TRUE,width = NULL, height = NULL)
wykres <- df %>% group_by(idsito,anno,df_month) %>% summarise(kwh = sum(kwh))
ggplotwykres <- ggplot(data = wykres, aes(df_month,kwh, color=factor(idsito))) +
geom_point()+
labs(y="kWh") +
labs(x="miesiąc")+
labs("Interaktywny wykres")
ggplotly(ggplotwykres,dynamicTicks = TRUE,width = NULL, height = NULL)
wykres <- df %>% group_by(idsito,anno,df_month) %>% summarise(kwh = sum(kwh))
ggplotwykres <- ggplot(data = wykres, aes(df_month,kwh, color=factor(idsito))) +
geom_point()+
labs(y="kWh") +
labs(x="miesiąc")+
labs("Interaktywny wykres")
ggplotly(ggplotwykres,dynamicTicks = TRUE,width = NULL, height = NULL)
wykres <- df %>% group_by(idsito,anno,df_month) %>% summarise(kwh = sum(kwh))
ggplotwykres <- ggplot(data = wykres, aes(df_month,kwh, color=factor(idsito))) +
geom_point()+
labs(y="kWh") +
labs(x="miesiąc")+
labs("Interaktywny wykres")
ggplotly(ggplotwykres,dynamicTicks = TRUE,width = NULL, height = NULL)
ggplotly(ggplotwykres,dynamicTicks = TRUE,width = NULL, height = NULL)
wykres <- df %>% group_by(idsito,anno,df_month) %>% summarise(kwh = sum(kwh))
ggplotwykres <- ggplot(data = wykres, aes(df_month,kwh, color=factor(idsito))) +
geom_point()+
labs(y="kWh") +
labs(x="miesiąc")+
labs("Interaktywny wykres")
ggplotly(ggplotwykres,width = NULL, height = NULL)
devtools::install_github('hadley/ggplot2')
knitr::opts_chunk$set(echo = TRUE)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(corrplot)
library(gridExtra)
library(plotly)
library(caret)
df <- read.csv("elektrownie.csv", row.names=1)
df<- df %>% mutate(month= format(as.POSIXct(data, format='%m/%d/%Y %H:%M'), "%Y-%m"))
df <- df %>% mutate(hour= as.numeric(format(as.POSIXct(data, format='%m/%d/%Y %H:%M'), "%H")))
meanIrr<-df%>%filter(irradiamento != 0) %>% group_by(month,hour)%>%summarise(mean=mean(irradiamento))
meanKWH<-df%>%filter(kwh != 0) %>% group_by(month, hour)%>%summarise(mean=mean(kwh))
df <- df %>% mutate(irradiamento = ifelse(irradiamento != 0,irradiamento, as.numeric(meanIrr[meanIrr$hour == hour & meanIrr$month == month,]$mean))) %>% filter(!is.na(irradiamento))
df <- df %>% mutate(kwh = ifelse(kwh != 0, kwh,                         as.numeric(meanKWH[meanKWH$hour == hour & meanKWH$month == month,]$mean))) %>% filter(!is.na(kwh))
set.seed(23)
summary(select(df,data,lat,lon,irradiamento,altitude,humidity,tempi,irri,kwh,dist,azimuthi,windspeed,pressure ))
przyklady<-select(df,lat,lon,irradiamento,altitude,humidity,tempi,dist,azimuthi,kwh,windspeed,pressure)
a <- list()
for (col in colnames(przyklady)) {
a[[col]] <-((ggplot(przyklady) +
aes_string(x=col) +
geom_histogram(bins = 30)))
}
do.call("grid.arrange",c(a, ncol = 3))
cor <- cor(df %>% select(-data, -month, -hour),use="complete.obs")
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor,type="upper",order="hclust", tl.col = "black", method = "color",col=col(200), addgrid.col = "black", diag=FALSE, tl.srt = 45)
wykres <- df %>% group_by(idsito,anno,month) %>% summarise(kwh = sum(kwh))
ggplotwykres <- ggplot(data = wykres, aes(month,kwh, color=factor(idsito))) +
geom_point()+
labs(y="kWh") +
labs(x="miesiąc")+
labs("Interaktywny wykres")
ggplotly(ggplotwykres,dynamicTicks = TRUE,width = NULL, height = NULL)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
fit_rf <- train(kwh ~ .,
data = training,
method = "rf",
trControl = ctrl,
ntree=3)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
fit_by <- train(kwh ~ .,
data = training,
method = "nb",
trControl = ctrl)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
fit_by <- train(kwh ~ .,
data = training,
method = "nb",
trControl = ctrl)
names(getModelInfo())
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi,irri,dist,azimuthi, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
fitAda <- train(kwh ~ .,
data = training,
method = "ada",
metric = "RMSE",
trControl = ctrl)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(corrplot)
library(gridExtra)
library(plotly)
library(caret)
df <- read.csv("elektrownie.csv", row.names=1)
df<- df %>% mutate(month= format(as.POSIXct(data, format='%m/%d/%Y %H:%M'), "%Y-%m"))
df <- df %>% mutate(hour= as.numeric(format(as.POSIXct(data, format='%m/%d/%Y %H:%M'), "%H")))
meanIrr<-df%>%filter(irradiamento != 0) %>% group_by(month,hour)%>%summarise(mean=mean(irradiamento))
meanKWH<-df%>%filter(kwh != 0) %>% group_by(month, hour)%>%summarise(mean=mean(kwh))
df <- df %>% mutate(irradiamento = ifelse(irradiamento != 0,irradiamento, as.numeric(meanIrr[meanIrr$hour == hour & meanIrr$month == month,]$mean))) %>% filter(!is.na(irradiamento))
df <- df %>% mutate(kwh = ifelse(kwh != 0, kwh,                         as.numeric(meanKWH[meanKWH$hour == hour & meanKWH$month == month,]$mean))) %>% filter(!is.na(kwh))
set.seed(23)
summary(select(df,data,lat,lon,irradiamento,altitude,humidity,tempi,irri,kwh,dist,azimuthi,windspeed,pressure ))
przyklady<-select(df,lat,lon,irradiamento,altitude,humidity,tempi,dist,azimuthi,kwh,windspeed,pressure)
a <- list()
for (col in colnames(przyklady)) {
a[[col]] <-((ggplot(przyklady) +
aes_string(x=col) +
geom_histogram(bins = 30)))
}
do.call("grid.arrange",c(a, ncol = 3))
cor <- cor(df %>% select(-data, -month, -hour),use="complete.obs")
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor,type="upper",order="hclust", tl.col = "black", method = "color",col=col(200), addgrid.col = "black", diag=FALSE, tl.srt = 45)
wykres <- df %>% group_by(idsito,anno,month) %>% summarise(kwh = sum(kwh))
ggplotwykres <- ggplot(data = wykres, aes(month,kwh, color=factor(idsito))) +
geom_point()+
labs(y="kWh") +
labs(x="miesiąc")+
labs("Interaktywny wykres")
ggplotly(ggplotwykres,dynamicTicks = TRUE,width = NULL, height = NULL)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente,irri,dist,azimuth, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
fitLm %>% summarise()
fitLm %>% summary()
fitLm %>% summary.factor()
fitLm %>% summary.lm()
fitLm %>% summary.lm(fitLm)
fitLm %>% summary.matrix()
fitLm %>% summary()
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente,irri,dist,azimuth,pressure,data, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente,irri,dist,azimuth,pressure, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
fitLm %>% summary()
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente,irri,dist,azimuth,pressure,icon, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
fitLm %>% summary()
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente,windbearing
,cloudcover,irri,dist,azimuth,pressure,icon, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
fitLm %>% summary()
fitLm %>% summary()
fitLm %>% summary()
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuth,pressure,icon, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
fitLm %>% summary()
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuthi,pressure,icon, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuthi,pressure,icon, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
fitLm %>% summary()
fitLm %>% summary()
fitLm %>% summary()
fitLm %>% summary(maxsum = 2)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuthi,pressure,icon,windspeedi
, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
fitLm %>% summary()
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuthi,pressure,windspeed
, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
fitLm %>% summary()
lmPredict %>% summary()
lmPredict %>% summary.lm()
summary.lm(lmPredict)
lmPredict %>% summary.lm()
lmPredict %>% summary()
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuthi,pressure,windspeed
, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
confusionMatrix(data = lmPredict,testing$kwh)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuthi,pressure,windspeed
, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
confusionMatrix(lmPredict,testing$kwh)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuthi,pressure,windspeed
, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
confusionMatrix(lmPredict)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuthi,pressure,windspeed
, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
confusionMatrix(lmPredict,kwh)
rdf<-df%>% select(idsito, irradiamento, altitude,humidity,tempi, temperatura_ambiente
,cloudcover,irri,dist,azimuthi,pressure,windspeed
, kwh)
inTraining <- createDataPartition(y = rdf$idsito, p = .75, list = FALSE)
training <- rdf[inTraining, ]
testing <- rdf[-inTraining, ]
ctrl <- trainControl(method = "repeatedcv", number = 2,repeats = 5)
fitLm <- train(kwh ~ .,
data = training,
method = "lm",
metric = "RMSE",
trControl = ctrl)
lmPredict<-predict(fitLm, newdata=testing)
postResample(lmPredict,testing$kwh)
